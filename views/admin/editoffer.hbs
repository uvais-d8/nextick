<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>NEXTICK</title>
    <link rel="stylesheet" href="styles.css">
    <link rel="shortcut icon" type="image/png" href="/assets/img/favicon.png">

    <style>
        /* Basic Reset */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* Body Styling */
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            color: #333;
            line-height: 1.6;
            padding: 20px;
        }

        /* Container for the form */
        .container {
            max-width: 800px;
            margin: 0 auto;
            background-color: #fff;
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* Heading */
        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
        }

        /* Form Styling */
        form {
            display: flex;
            flex-direction: column;
        }

        /* Form Group */
        .form-group {
            margin-bottom: 20px;
        }

        /* Form Labels */
        label {
            font-weight: bold;
            margin-bottom: 5px;
            display: block;
        }

        /* Form Inputs and Textarea */
        input[type="text"],
        input[type="number"],
        input[type="date"],
        select,
        textarea {
            width: 100%;
            padding: 10px;
            margin-top: 5px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 16px;
        }

        textarea {
            resize: vertical;
            min-height: 100px;
        }

        /* Button Styling */
        button {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 15px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s;
            margin-top: 20px;
        }

        button:hover {
            background-color: #218838;
        }

        /* Success/Failure Message */
        #message {
            margin-top: 20px;
            padding: 10px;
            font-size: 16px;
            text-align: center;
            border-radius: 5px;
            display: none;
        }

        #message.success {
            background-color: #d4edda;
            color: #155724;
        }

        #message.error {
            background-color: #f8d7da;
            color: #721c24;
        }

        /* Optional Fields */
        input[type="text"]::placeholder {
            font-style: italic;
            color: #888;
        }

        /* Mobile Responsiveness */
        @media (max-width: 600px) {
            .container {
                padding: 15px;
            }

            button {
                font-size: 14px;
                padding: 12px;
            }
        }
    </style>
</head>

<body>
    <div class="container">
        <h1>Edit Existing Offer</h1>
        <input id="message-box" type="text" style="border-width: 0px; color: red;" value="{{message}}" readonly>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                const message = document.getElementById("message-box");
                if (message) {
                    setTimeout(() => {
                        message.remove();
                    }, 2000);
                }
            });
        </script>
    <form id="editOfferForm" method="post" action="/admin/editingoffer/{{offer._id}}">
  <div class="form-group">
    <label for="DiscountType">Discount Type:</label>
    <select id="DiscountType" name="DiscountType">
      <option value="percentage" {{#if (eq offer.DiscountType "percentage")}}selected{{/if}}>Percentage</option>
      <option value="fixed" {{#if (eq offer.DiscountType "fixed")}}selected{{/if}}>Fixed Amount</option>
    </select>
    <span class="error-message" id="error-DiscountType"></span>
  </div>

  <div class="form-group">
    <label for="DiscountValue">Discount Value:</label>
    <input type="number" value="{{offer.DiscountValue}}" id="DiscountValue" name="DiscountValue" min="0"  />
    <span class="error-message" id="error-DiscountValue"></span>
  </div>

  <div class="form-group">
    <label for="Description">Description:</label>
    <textarea id="Description" name="Description" maxlength="500" >{{offer.Description}}</textarea>
    <span class="error-message" id="error-Description"></span>
  </div>

  <div class="form-group">
    <label for="Products">Applicable Products:</label>
    <button id="dropdownToggle" class="btn btn-secondary" type="button" style="margin-bottom: 10px;">Select Products</button>
    <div id="ProductsDropdown" class="form-control"
      style="display: none; height: auto; overflow-y: auto; border: 1px solid #ccc; padding: 5px;">
      {{#each products}}
      <div style="display: flex; justify-content: space-between; align-items: center; padding: 5px;">
        <label for="product-{{this._id}}" style="margin-right: 10px;">{{this.name}}</label>
        <input type="checkbox" id="product-{{this._id}}" name="Products[]" value="{{this._id}}" {{#if (contains ../offer.Products this._id)}}checked{{/if}} />
      </div>
      {{/each}}
    </div>
  </div>

  <div class="form-group">
    <label for="Category">Applicable Categories:</label>
    <button id="dropdownToggles" class="btn btn-secondary" type="button" style="margin-bottom: 10px;">Select Categories</button>
    <div id="CategoryDropdown" class="form-control"
      style="display: none; height: auto; overflow-y: auto; border: 1px solid #ccc; padding: 5px;">
      {{#each category}}
      <div style="display: flex; justify-content: space-between; align-items: center; padding: 5px;">
        <label for="category-{{this._id}}" style="margin-right: 10px;">{{this.category}}</label>
        <input type="checkbox" id="category-{{this._id}}" name="Categories[]" value="{{this._id}}" {{#if (contains ../offer.Categories this._id)}}checked{{/if}} />
      </div>
      {{/each}}
    </div>
  </div>

  <div class="form-group">
    <label for="ExpiryDate">Expiry Date:</label>
    <input type="date" id="ExpiryDate" name="ExpiryDate" 
      value="{{formatDate offer.ExpiryDate}}" />
    <span class="error-message" id="error-ExpiryDate"></span>
  </div>

  <div class="form-group">
    <label for="Status">Offer Status:</label>
    <select id="Status" name="Status" >
      <option value="true" {{#if (eq offer.Status "true")}}selected{{/if}}>Active</option>
      <option value="false" {{#if (eq offer.Status "false")}}selected{{/if}}>Non Active</option>
    </select>
    <span class="error-message" id="error-Status"></span>
  </div>

  <input style="height: 35px; font-weight: bold" type="submit" value="Update Offer">
  <a href="/admin/offer"><input style="margin-top:5px;width:100%;height: 35px; font-weight: bold" type="button" value="back"></a>
</form>

 <script>
    // Helper Function to Show Error Messages
    function showError(inputId, message) {
      const errorElement = document.getElementById(`error-${inputId}`);
      if (errorElement) {
        errorElement.textContent = message;
        errorElement.style.color = "red";
        errorElement.style.fontSize = "0.9em";
      }
    }

    function clearError(inputId) {
      const errorElement = document.getElementById(`error-${inputId}`);
      if (errorElement) {
        errorElement.textContent = "";
      }
    }

    // Toggle Products Dropdown
    document.getElementById("dropdownToggle").addEventListener("click", function () {
      const dropdown = document.getElementById("ProductsDropdown");
      dropdown.style.display = dropdown.style.display === "none" ? "block" : "none";
    });

    // Toggle Categories Dropdown
    document.getElementById("dropdownToggles").addEventListener("click", function () {
      const dropdown = document.getElementById("CategoryDropdown");
      dropdown.style.display = dropdown.style.display === "none" ? "block" : "none";
    });

    // Form Validation
    document.getElementById("editOfferForm").addEventListener("submit", function (event) {
      let isValid = true;

      // Clear all previous errors
      ["DiscountType", "DiscountValue", "Description", "ExpiryDate", "Status"].forEach(clearError);

      const discountType = document.getElementById("DiscountType").value;
      const discountValue = parseFloat(document.getElementById("DiscountValue").value);
      const description = document.getElementById("Description").value;
      const expiryDate = document.getElementById("ExpiryDate").value;

      // Validate Discount Type and Value
      if (discountType === "percentage" && discountValue > 50) {
        isValid = false;
        showError("DiscountValue", "Percentage discount cannot exceed 50%.");
      } else if (discountType === "fixed" && discountValue >= 1000) {
        isValid = false;
        showError("DiscountValue", "Fixed discount must be below Rs. 1000.");
      }

      // Validate Description
      if (description.trim() === "") {
        isValid = false;
        showError("Description", "Description cannot be empty.");
      }

      // Validate Expiry Date
      if (!expiryDate) {
        isValid = false;
        showError("ExpiryDate", "Expiry Date is required.");
      } else if (new Date(expiryDate) < new Date()) {
        isValid = false;
        showError("ExpiryDate", "Expiry Date cannot be in the past.");
      }

      // Enforce Minimum Purchase Value
      const minPurchase = 1000; // You can customize this based on your logic
      if (discountType === "fixed" && minPurchase < 1000) {
        isValid = false;
        showError("DiscountType", "Minimum purchase must be Rs. 1000 or more.");
      }

      if (!isValid) {
        event.preventDefault(); // Prevent form submission if validation fails
      }
    });
  </script>
        <div id="message"></div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
   <script>
    document.getElementById('editOfferForm').addEventListener('submit', function (e) {
       

        const OfferData = {
            DiscountType: document.getElementById('DiscountType').value,
            DiscountValue: parseFloat(document.getElementById('DiscountValue').value),
            Description: document.getElementById('Description').value,
            Products: Array.from(document.querySelectorAll('input[name="Products[]"]:checked')).map(checkbox => checkbox.value),
            Categories: Array.from(document.querySelectorAll('input[name="Categories[]"]:checked')).map(checkbox => checkbox.value),
            ExpiryDate: new Date(document.getElementById('ExpiryDate').value),
            Status: document.getElementById('Status').value === 'true',  
        };
 
        axios.post(`/api/Offers/${offer._id}`, OfferData)   
            .then(response => {
                document.getElementById('message').innerHTML = 'Offer updated successfully!';
            })
            .catch(error => {
                document.getElementById('message').innerHTML = 'Error updating offer. Please try again.';
                console.error(error);
            });
    });
</script>
</body>

</html>